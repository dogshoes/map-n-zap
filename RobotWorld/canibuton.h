/**********************************************************************
   Map-N-Zap v2.x. Interface to the CYE Personal Robot
   Copyright (C) 2000, Probotics, Inc. 
 
   This program is free software; you can redistribute it and/or
   modify it under the terms of the GNU General Public License
   as published by the Free Software Foundation; either version 2
   of the License, or (at your option) any later version.
 
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   General Public License for more details.Furthermore, this source code
   is distributed without any promise, implied or explicit, of 
   support from Probotics, Inc.
 
   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  
   02111-1307, USA.
 
   Probotics, Inc
   http://www.personalrobots.com
   700 River Ave #223
   Pittsburgh, PA 15212
   USA
 **********************************************************************/
 #ifndef __CANIBUTON_H__
 #define __CANIBUTON_H__
 
 // Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++
 
 // NOTE: Do not modify the contents of this file.  If this class is regenerated by
 //  Microsoft Visual C++, your modifications will be overwritten.
 
 
 // Dispatch interfaces referenced by this interface
 class CPicture;
 class COleFont;
 
 /////////////////////////////////////////////////////////////////////////////
 // CCanibuton wrapper class
 
 class CCanibuton : public CWnd
 {
 protected:
 	DECLARE_DYNCREATE(CCanibuton)
 public:
 	CLSID const& GetClsid()
 	{
 		static CLSID const clsid
 			= { 0xf72cc885, 0x5adc, 0x101b, { 0xa5, 0x6c, 0x0, 0xaa, 0x0, 0x36, 0x68, 0xdc } };
 		return clsid;
 	}
 	virtual BOOL Create(LPCTSTR lpszClassName,
 		LPCTSTR lpszWindowName, DWORD dwStyle,
 		const RECT& rect,
 		CWnd* pParentWnd, UINT nID,
 		CCreateContext* pContext = NULL)
 	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }
 
     BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
 		const RECT& rect, CWnd* pParentWnd, UINT nID,
 		CFile* pPersist = NULL, BOOL bStorage = FALSE,
 		BSTR bstrLicKey = NULL)
 	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
 		pPersist, bStorage, bstrLicKey); }
 
 // Attributes
 public:
 	short GetValue();
 	void SetValue(short);
 	short Get_Value();
 	void Set_Value(short);
 	CString GetCCBfileSave();
 	void SetCCBfileSave(LPCTSTR);
 	BOOL GetHideFocusBox();
 	void SetHideFocusBox(BOOL);
 	short GetButtonVersion();
 	void SetButtonVersion(short);
 	long GetSpecialOp();
 	void SetSpecialOp(long);
 	CString GetFontName();
 	void SetFontName(LPCTSTR);
 	BOOL GetFontBold();
 	void SetFontBold(BOOL);
 	BOOL GetFontItalic();
 	void SetFontItalic(BOOL);
 	BOOL GetFontStrikethru();
 	void SetFontStrikethru(BOOL);
 	BOOL GetFontUnderline();
 	void SetFontUnderline(BOOL);
 	float GetFontSize();
 	void SetFontSize(float);
 	short GetFrame();
 	void SetFrame(short);
 	CPicture GetPicture();
 	void SetPicture(LPDISPATCH);
 	long GetCycle();
 	void SetCycle(long);
 	CPicture GetMouseIcon();
 	void SetMouseIcon(LPDISPATCH);
 	short GetTextXpos();
 	void SetTextXpos(short);
 	short GetTextYpos();
 	void SetTextYpos(short);
 	long GetTextPosition();
 	void SetTextPosition(long);
 	short GetPictureXpos();
 	void SetPictureXpos(short);
 	short GetPictureYpos();
 	void SetPictureYpos(short);
 	long GetPictDrawMode();
 	void SetPictDrawMode(long);
 	short GetSpeed();
 	void SetSpeed(short);
 	CString GetCCBfileLoad();
 	void SetCCBfileLoad(LPCTSTR);
 	BOOL GetClearFirst();
 	void SetClearFirst(BOOL);
 	long GetMousePointer();
 	void SetMousePointer(long);
 	long GetClickFilter();
 	void SetClickFilter(long);
 	OLE_COLOR GetBackColor();
 	void SetBackColor(OLE_COLOR);
 	OLE_COLOR GetForeColor();
 	void SetForeColor(OLE_COLOR);
 	BOOL GetEnabled();
 	void SetEnabled(BOOL);
 	CString GetCaption();
 	void SetCaption(LPCTSTR);
 	COleFont GetFont();
 	void SetFont(LPDISPATCH);
 	OLE_HANDLE GetHWnd();
 	void SetHWnd(OLE_HANDLE);
 	short GetBorderStyle();
 	void SetBorderStyle(short);
 
 // Operations
 public:
 	void AboutBox();
 	void Refresh();
 };
 
 #endif // __CANIBUTON_H__

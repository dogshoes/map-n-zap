// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "mhcomm.h"

// Dispatch interfaces referenced by this interface
#include "font.h"

/////////////////////////////////////////////////////////////////////////////
// CMhComm

IMPLEMENT_DYNCREATE(CMhComm, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CMhComm properties

short CMhComm::GetQBBackColor()
{
	short result;
	GetProperty(0xf, VT_I2, (void*)&result);
	return result;
}

void CMhComm::SetQBBackColor(short propVal)
{
	SetProperty(0xf, VT_I2, propVal);
}

short CMhComm::GetQBForeColor()
{
	short result;
	GetProperty(0x10, VT_I2, (void*)&result);
	return result;
}

void CMhComm::SetQBForeColor(short propVal)
{
	SetProperty(0x10, VT_I2, propVal);
}

CString CMhComm::GetFontName()
{
	CString result;
	GetProperty(0x11, VT_BSTR, (void*)&result);
	return result;
}

void CMhComm::SetFontName(LPCTSTR propVal)
{
	SetProperty(0x11, VT_BSTR, propVal);
}

float CMhComm::GetFontSize()
{
	float result;
	GetProperty(0x12, VT_R4, (void*)&result);
	return result;
}

void CMhComm::SetFontSize(float propVal)
{
	SetProperty(0x12, VT_R4, propVal);
}

BOOL CMhComm::GetFontBold()
{
	BOOL result;
	GetProperty(0x13, VT_BOOL, (void*)&result);
	return result;
}

void CMhComm::SetFontBold(BOOL propVal)
{
	SetProperty(0x13, VT_BOOL, propVal);
}

BOOL CMhComm::GetFontUnderline()
{
	BOOL result;
	GetProperty(0x14, VT_BOOL, (void*)&result);
	return result;
}

void CMhComm::SetFontUnderline(BOOL propVal)
{
	SetProperty(0x14, VT_BOOL, propVal);
}

BOOL CMhComm::GetFontItalic()
{
	BOOL result;
	GetProperty(0x15, VT_BOOL, (void*)&result);
	return result;
}

void CMhComm::SetFontItalic(BOOL propVal)
{
	SetProperty(0x15, VT_BOOL, propVal);
}

long CMhComm::GetHandshaking()
{
	long result;
	GetProperty(0x16, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetHandshaking(long propVal)
{
	SetProperty(0x16, VT_I4, propVal);
}

BOOL CMhComm::GetCDHolding()
{
	BOOL result;
	GetProperty(0x17, VT_BOOL, (void*)&result);
	return result;
}

void CMhComm::SetCDHolding(BOOL propVal)
{
	SetProperty(0x17, VT_BOOL, propVal);
}

long CMhComm::GetProcessInput()
{
	long result;
	GetProperty(0x18, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetProcessInput(long propVal)
{
	SetProperty(0x18, VT_I4, propVal);
}

BOOL CMhComm::GetBreak()
{
	BOOL result;
	GetProperty(0x19, VT_BOOL, (void*)&result);
	return result;
}

void CMhComm::SetBreak(BOOL propVal)
{
	SetProperty(0x19, VT_BOOL, propVal);
}

long CMhComm::GetCDTimeout()
{
	long result;
	GetProperty(0x1a, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetCDTimeout(long propVal)
{
	SetProperty(0x1a, VT_I4, propVal);
}

short CMhComm::GetCommID()
{
	short result;
	GetProperty(0x1b, VT_I2, (void*)&result);
	return result;
}

void CMhComm::SetCommID(short propVal)
{
	SetProperty(0x1b, VT_I2, propVal);
}

short CMhComm::GetCommPort()
{
	short result;
	GetProperty(0x1c, VT_I2, (void*)&result);
	return result;
}

void CMhComm::SetCommPort(short propVal)
{
	SetProperty(0x1c, VT_I2, propVal);
}

BOOL CMhComm::GetCTSHolding()
{
	BOOL result;
	GetProperty(0x1d, VT_BOOL, (void*)&result);
	return result;
}

void CMhComm::SetCTSHolding(BOOL propVal)
{
	SetProperty(0x1d, VT_BOOL, propVal);
}

long CMhComm::GetCTSTimeout()
{
	long result;
	GetProperty(0x1e, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetCTSTimeout(long propVal)
{
	SetProperty(0x1e, VT_I4, propVal);
}

BOOL CMhComm::GetDSRHolding()
{
	BOOL result;
	GetProperty(0x1f, VT_BOOL, (void*)&result);
	return result;
}

void CMhComm::SetDSRHolding(BOOL propVal)
{
	SetProperty(0x1f, VT_BOOL, propVal);
}

long CMhComm::GetDSRTimeout()
{
	long result;
	GetProperty(0x20, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetDSRTimeout(long propVal)
{
	SetProperty(0x20, VT_I4, propVal);
}

BOOL CMhComm::GetDTREnable()
{
	BOOL result;
	GetProperty(0x21, VT_BOOL, (void*)&result);
	return result;
}

void CMhComm::SetDTREnable(BOOL propVal)
{
	SetProperty(0x21, VT_BOOL, propVal);
}

short CMhComm::GetCommEvent()
{
	short result;
	GetProperty(0x22, VT_I2, (void*)&result);
	return result;
}

void CMhComm::SetCommEvent(short propVal)
{
	SetProperty(0x22, VT_I2, propVal);
}

short CMhComm::GetInBufferSize()
{
	short result;
	GetProperty(0x23, VT_I2, (void*)&result);
	return result;
}

void CMhComm::SetInBufferSize(short propVal)
{
	SetProperty(0x23, VT_I2, propVal);
}

short CMhComm::GetInBufferCount()
{
	short result;
	GetProperty(0x24, VT_I2, (void*)&result);
	return result;
}

void CMhComm::SetInBufferCount(short propVal)
{
	SetProperty(0x24, VT_I2, propVal);
}

CString CMhComm::GetInput()
{
	CString result;
	GetProperty(0x25, VT_BSTR, (void*)&result);
	return result;
}

void CMhComm::SetInput(LPCTSTR propVal)
{
	SetProperty(0x25, VT_BSTR, propVal);
}

short CMhComm::GetInputLen()
{
	short result;
	GetProperty(0x26, VT_I2, (void*)&result);
	return result;
}

void CMhComm::SetInputLen(short propVal)
{
	SetProperty(0x26, VT_I2, propVal);
}

long CMhComm::GetInTimeOut()
{
	long result;
	GetProperty(0x27, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetInTimeOut(long propVal)
{
	SetProperty(0x27, VT_I4, propVal);
}

CString CMhComm::GetLineInput()
{
	CString result;
	GetProperty(0x28, VT_BSTR, (void*)&result);
	return result;
}

void CMhComm::SetLineInput(LPCTSTR propVal)
{
	SetProperty(0x28, VT_BSTR, propVal);
}

BOOL CMhComm::GetNullDiscard()
{
	BOOL result;
	GetProperty(0x29, VT_BOOL, (void*)&result);
	return result;
}

void CMhComm::SetNullDiscard(BOOL propVal)
{
	SetProperty(0x29, VT_BOOL, propVal);
}

short CMhComm::GetOutBufferSize()
{
	short result;
	GetProperty(0x2a, VT_I2, (void*)&result);
	return result;
}

void CMhComm::SetOutBufferSize(short propVal)
{
	SetProperty(0x2a, VT_I2, propVal);
}

short CMhComm::GetOutBufferCount()
{
	short result;
	GetProperty(0x2b, VT_I2, (void*)&result);
	return result;
}

void CMhComm::SetOutBufferCount(short propVal)
{
	SetProperty(0x2b, VT_I2, propVal);
}

CString CMhComm::GetOutput()
{
	CString result;
	GetProperty(0x2c, VT_BSTR, (void*)&result);
	return result;
}

void CMhComm::SetOutput(LPCTSTR propVal)
{
	SetProperty(0x2c, VT_BSTR, propVal);
}

CString CMhComm::GetParityReplace()
{
	CString result;
	GetProperty(0x2d, VT_BSTR, (void*)&result);
	return result;
}

void CMhComm::SetParityReplace(LPCTSTR propVal)
{
	SetProperty(0x2d, VT_BSTR, propVal);
}

BOOL CMhComm::GetPortOpen()
{
	BOOL result;
	GetProperty(0x2e, VT_BOOL, (void*)&result);
	return result;
}

void CMhComm::SetPortOpen(BOOL propVal)
{
	SetProperty(0x2e, VT_BOOL, propVal);
}

short CMhComm::GetRThreshold()
{
	short result;
	GetProperty(0x2f, VT_I2, (void*)&result);
	return result;
}

void CMhComm::SetRThreshold(short propVal)
{
	SetProperty(0x2f, VT_I2, propVal);
}

BOOL CMhComm::GetRTSEnable()
{
	BOOL result;
	GetProperty(0x30, VT_BOOL, (void*)&result);
	return result;
}

void CMhComm::SetRTSEnable(BOOL propVal)
{
	SetProperty(0x30, VT_BOOL, propVal);
}

CString CMhComm::GetSettings()
{
	CString result;
	GetProperty(0x31, VT_BSTR, (void*)&result);
	return result;
}

void CMhComm::SetSettings(LPCTSTR propVal)
{
	SetProperty(0x31, VT_BSTR, propVal);
}

short CMhComm::GetSThreshold()
{
	short result;
	GetProperty(0x32, VT_I2, (void*)&result);
	return result;
}

void CMhComm::SetSThreshold(short propVal)
{
	SetProperty(0x32, VT_I2, propVal);
}

short CMhComm::GetColumns()
{
	short result;
	GetProperty(0x33, VT_I2, (void*)&result);
	return result;
}

void CMhComm::SetColumns(short propVal)
{
	SetProperty(0x33, VT_I2, propVal);
}

short CMhComm::GetRows()
{
	short result;
	GetProperty(0x34, VT_I2, (void*)&result);
	return result;
}

void CMhComm::SetRows(short propVal)
{
	SetProperty(0x34, VT_I2, propVal);
}

short CMhComm::GetCursorRow()
{
	short result;
	GetProperty(0x35, VT_I2, (void*)&result);
	return result;
}

void CMhComm::SetCursorRow(short propVal)
{
	SetProperty(0x35, VT_I2, propVal);
}

short CMhComm::GetCursorColumn()
{
	short result;
	GetProperty(0x36, VT_I2, (void*)&result);
	return result;
}

void CMhComm::SetCursorColumn(short propVal)
{
	SetProperty(0x36, VT_I2, propVal);
}

CString CMhComm::GetOutputDisplay()
{
	CString result;
	GetProperty(0x37, VT_BSTR, (void*)&result);
	return result;
}

void CMhComm::SetOutputDisplay(LPCTSTR propVal)
{
	SetProperty(0x37, VT_BSTR, propVal);
}

CString CMhComm::GetText()
{
	CString result;
	GetProperty(0x38, VT_BSTR, (void*)&result);
	return result;
}

void CMhComm::SetText(LPCTSTR propVal)
{
	SetProperty(0x38, VT_BSTR, propVal);
}

long CMhComm::GetTerminalEmulation()
{
	long result;
	GetProperty(0x39, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetTerminalEmulation(long propVal)
{
	SetProperty(0x39, VT_I4, propVal);
}

BOOL CMhComm::GetEcho()
{
	BOOL result;
	GetProperty(0x1, VT_BOOL, (void*)&result);
	return result;
}

void CMhComm::SetEcho(BOOL propVal)
{
	SetProperty(0x1, VT_BOOL, propVal);
}

long CMhComm::GetAutoSizeTerminal()
{
	long result;
	GetProperty(0x3a, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetAutoSizeTerminal(long propVal)
{
	SetProperty(0x3a, VT_I4, propVal);
}

long CMhComm::GetAutoScroll()
{
	long result;
	GetProperty(0x3b, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetAutoScroll(long propVal)
{
	SetProperty(0x3b, VT_I4, propVal);
}

CString CMhComm::GetCaptureFilename()
{
	CString result;
	GetProperty(0x3c, VT_BSTR, (void*)&result);
	return result;
}

void CMhComm::SetCaptureFilename(LPCTSTR propVal)
{
	SetProperty(0x3c, VT_BSTR, propVal);
}

long CMhComm::GetCaptureMode()
{
	long result;
	GetProperty(0x2, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetCaptureMode(long propVal)
{
	SetProperty(0x2, VT_I4, propVal);
}

short CMhComm::GetScrollRows()
{
	short result;
	GetProperty(0x3d, VT_I2, (void*)&result);
	return result;
}

void CMhComm::SetScrollRows(short propVal)
{
	SetProperty(0x3d, VT_I2, propVal);
}

CString CMhComm::GetScrollText()
{
	CString result;
	GetProperty(0x3e, VT_BSTR, (void*)&result);
	return result;
}

void CMhComm::SetScrollText(LPCTSTR propVal)
{
	SetProperty(0x3e, VT_BSTR, propVal);
}

long CMhComm::GetColorFilter()
{
	long result;
	GetProperty(0x3f, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetColorFilter(long propVal)
{
	SetProperty(0x3f, VT_I4, propVal);
}

CString CMhComm::GetDownload()
{
	CString result;
	GetProperty(0x40, VT_BSTR, (void*)&result);
	return result;
}

void CMhComm::SetDownload(LPCTSTR propVal)
{
	SetProperty(0x40, VT_BSTR, propVal);
}

CString CMhComm::GetUpload()
{
	CString result;
	GetProperty(0x41, VT_BSTR, (void*)&result);
	return result;
}

void CMhComm::SetUpload(LPCTSTR propVal)
{
	SetProperty(0x41, VT_BSTR, propVal);
}

CString CMhComm::GetTransferDestFilename()
{
	CString result;
	GetProperty(0x42, VT_BSTR, (void*)&result);
	return result;
}

void CMhComm::SetTransferDestFilename(LPCTSTR propVal)
{
	SetProperty(0x42, VT_BSTR, propVal);
}

short CMhComm::GetTransferStatus()
{
	short result;
	GetProperty(0x43, VT_I2, (void*)&result);
	return result;
}

void CMhComm::SetTransferStatus(short propVal)
{
	SetProperty(0x43, VT_I2, propVal);
}

CString CMhComm::GetTransferSourceFilename()
{
	CString result;
	GetProperty(0x44, VT_BSTR, (void*)&result);
	return result;
}

void CMhComm::SetTransferSourceFilename(LPCTSTR propVal)
{
	SetProperty(0x44, VT_BSTR, propVal);
}

long CMhComm::GetTransferTransferred()
{
	long result;
	GetProperty(0x45, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetTransferTransferred(long propVal)
{
	SetProperty(0x45, VT_I4, propVal);
}

long CMhComm::GetTransferFileSize()
{
	long result;
	GetProperty(0x46, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetTransferFileSize(long propVal)
{
	SetProperty(0x46, VT_I4, propVal);
}

long CMhComm::GetTransferProtocol()
{
	long result;
	GetProperty(0x47, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetTransferProtocol(long propVal)
{
	SetProperty(0x47, VT_I4, propVal);
}

long CMhComm::GetTransferStatusDialog()
{
	long result;
	GetProperty(0x48, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetTransferStatusDialog(long propVal)
{
	SetProperty(0x48, VT_I4, propVal);
}

long CMhComm::GetSelLength()
{
	long result;
	GetProperty(0x49, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetSelLength(long propVal)
{
	SetProperty(0x49, VT_I4, propVal);
}

long CMhComm::GetSelStart()
{
	long result;
	GetProperty(0x4a, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetSelStart(long propVal)
{
	SetProperty(0x4a, VT_I4, propVal);
}

short CMhComm::GetIntegerTag()
{
	short result;
	GetProperty(0x3, VT_I2, (void*)&result);
	return result;
}

void CMhComm::SetIntegerTag(short propVal)
{
	SetProperty(0x3, VT_I2, propVal);
}

CString CMhComm::GetSelText()
{
	CString result;
	GetProperty(0x4b, VT_BSTR, (void*)&result);
	return result;
}

void CMhComm::SetSelText(LPCTSTR propVal)
{
	SetProperty(0x4b, VT_BSTR, propVal);
}

CString CMhComm::GetTransferMessage()
{
	CString result;
	GetProperty(0x4c, VT_BSTR, (void*)&result);
	return result;
}

void CMhComm::SetTransferMessage(LPCTSTR propVal)
{
	SetProperty(0x4c, VT_BSTR, propVal);
}

long CMhComm::GetBackspace()
{
	long result;
	GetProperty(0x4, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetBackspace(long propVal)
{
	SetProperty(0x4, VT_I4, propVal);
}

BOOL CMhComm::GetAutoPortOpen()
{
	BOOL result;
	GetProperty(0x5, VT_BOOL, (void*)&result);
	return result;
}

void CMhComm::SetAutoPortOpen(BOOL propVal)
{
	SetProperty(0x5, VT_BOOL, propVal);
}

long CMhComm::GetCursorStyle()
{
	long result;
	GetProperty(0x4d, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetCursorStyle(long propVal)
{
	SetProperty(0x4d, VT_I4, propVal);
}

long CMhComm::GetAutoDownload()
{
	long result;
	GetProperty(0x6, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetAutoDownload(long propVal)
{
	SetProperty(0x6, VT_I4, propVal);
}

long CMhComm::GetDialType()
{
	long result;
	GetProperty(0x7, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetDialType(long propVal)
{
	SetProperty(0x7, VT_I4, propVal);
}

CString CMhComm::GetPhoneNumber()
{
	CString result;
	GetProperty(0x4e, VT_BSTR, (void*)&result);
	return result;
}

void CMhComm::SetPhoneNumber(LPCTSTR propVal)
{
	SetProperty(0x4e, VT_BSTR, propVal);
}

BOOL CMhComm::GetDial()
{
	BOOL result;
	GetProperty(0x4f, VT_BOOL, (void*)&result);
	return result;
}

void CMhComm::SetDial(BOOL propVal)
{
	SetProperty(0x4f, VT_BOOL, propVal);
}

CString CMhComm::GetModemInit()
{
	CString result;
	GetProperty(0x50, VT_BSTR, (void*)&result);
	return result;
}

void CMhComm::SetModemInit(LPCTSTR propVal)
{
	SetProperty(0x50, VT_BSTR, propVal);
}

CString CMhComm::GetModemType()
{
	CString result;
	GetProperty(0x51, VT_BSTR, (void*)&result);
	return result;
}

void CMhComm::SetModemType(LPCTSTR propVal)
{
	SetProperty(0x51, VT_BSTR, propVal);
}

CString CMhComm::GetUploadPath()
{
	CString result;
	GetProperty(0x8, VT_BSTR, (void*)&result);
	return result;
}

void CMhComm::SetUploadPath(LPCTSTR propVal)
{
	SetProperty(0x8, VT_BSTR, propVal);
}

CString CMhComm::GetDownloadPath()
{
	CString result;
	GetProperty(0x9, VT_BSTR, (void*)&result);
	return result;
}

void CMhComm::SetDownloadPath(LPCTSTR propVal)
{
	SetProperty(0x9, VT_BSTR, propVal);
}

long CMhComm::GetTransferOptimization()
{
	long result;
	GetProperty(0xa, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetTransferOptimization(long propVal)
{
	SetProperty(0xa, VT_I4, propVal);
}

BOOL CMhComm::GetZModemDownloadRecovery()
{
	BOOL result;
	GetProperty(0xb, VT_BOOL, (void*)&result);
	return result;
}

void CMhComm::SetZModemDownloadRecovery(BOOL propVal)
{
	SetProperty(0xb, VT_BOOL, propVal);
}

short CMhComm::GetTransferCPS()
{
	short result;
	GetProperty(0x52, VT_I2, (void*)&result);
	return result;
}

void CMhComm::SetTransferCPS(short propVal)
{
	SetProperty(0x52, VT_I2, propVal);
}

BOOL CMhComm::GetTransferIgnoreCD()
{
	BOOL result;
	GetProperty(0xc, VT_BOOL, (void*)&result);
	return result;
}

void CMhComm::SetTransferIgnoreCD(BOOL propVal)
{
	SetProperty(0xc, VT_BOOL, propVal);
}

BOOL CMhComm::GetInstantScrollBars()
{
	BOOL result;
	GetProperty(0xd, VT_BOOL, (void*)&result);
	return result;
}

void CMhComm::SetInstantScrollBars(BOOL propVal)
{
	SetProperty(0xd, VT_BOOL, propVal);
}

unsigned long CMhComm::GetForeColor()
{
	unsigned long result;
	GetProperty(0x53, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetForeColor(unsigned long propVal)
{
	SetProperty(0x53, VT_I4, propVal);
}

unsigned long CMhComm::GetBackColor()
{
	unsigned long result;
	GetProperty(0x54, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetBackColor(unsigned long propVal)
{
	SetProperty(0x54, VT_I4, propVal);
}

CString CMhComm::GetModemInitString()
{
	CString result;
	GetProperty(0x55, VT_BSTR, (void*)&result);
	return result;
}

void CMhComm::SetModemInitString(LPCTSTR propVal)
{
	SetProperty(0x55, VT_BSTR, propVal);
}

unsigned long CMhComm::GetScrollSeparatorColor()
{
	unsigned long result;
	GetProperty(0x56, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetScrollSeparatorColor(unsigned long propVal)
{
	SetProperty(0x56, VT_I4, propVal);
}

long CMhComm::GetScrollSeparatorStyle()
{
	long result;
	GetProperty(0x57, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetScrollSeparatorStyle(long propVal)
{
	SetProperty(0x57, VT_I4, propVal);
}

COleFont CMhComm::GetFont()
{
	LPDISPATCH pDispatch;
	GetProperty(DISPID_FONT, VT_DISPATCH, (void*)&pDispatch);
	return COleFont(pDispatch);
}

void CMhComm::SetFont(LPDISPATCH propVal)
{
	SetProperty(DISPID_FONT, VT_DISPATCH, propVal);
}

short CMhComm::GetBorderStyle()
{
	short result;
	GetProperty(DISPID_BORDERSTYLE, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetBorderStyle(short propVal)
{
	SetProperty(DISPID_BORDERSTYLE, VT_I4, propVal);
}

BOOL CMhComm::GetEnabled()
{
	BOOL result;
	GetProperty(DISPID_ENABLED, VT_BOOL, (void*)&result);
	return result;
}

void CMhComm::SetEnabled(BOOL propVal)
{
	SetProperty(DISPID_ENABLED, VT_BOOL, propVal);
}

BOOL CMhComm::GetTransferComBarUpdate()
{
	BOOL result;
	GetProperty(0xe, VT_BOOL, (void*)&result);
	return result;
}

void CMhComm::SetTransferComBarUpdate(BOOL propVal)
{
	SetProperty(0xe, VT_BOOL, propVal);
}

CString CMhComm::Get_PhoneNumber()
{
	CString result;
	GetProperty(0x0, VT_BSTR, (void*)&result);
	return result;
}

void CMhComm::Set_PhoneNumber(LPCTSTR propVal)
{
	SetProperty(0x0, VT_BSTR, propVal);
}

OLE_HANDLE CMhComm::GetHWnd()
{
	OLE_HANDLE result;
	GetProperty(DISPID_HWND, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetHWnd(OLE_HANDLE propVal)
{
	SetProperty(DISPID_HWND, VT_I4, propVal);
}

long CMhComm::GetMhComBarHWnd()
{
	long result;
	GetProperty(0x58, VT_I4, (void*)&result);
	return result;
}

void CMhComm::SetMhComBarHWnd(long propVal)
{
	SetProperty(0x58, VT_I4, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CMhComm operations

void CMhComm::Clear()
{
	InvokeHelper(0x59, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CMhComm::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

/**********************************************************************
   Map-N-Zap v2.x. Interface to the CYE Personal Robot
   Copyright (C) 2000, Probotics, Inc. 
 
   This program is free software; you can redistribute it and/or
   modify it under the terms of the GNU General Public License
   as published by the Free Software Foundation; either version 2
   of the License, or (at your option) any later version.
 
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   General Public License for more details.Furthermore, this source code
   is distributed without any promise, implied or explicit, of 
   support from Probotics, Inc.
 
   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  
   02111-1307, USA.
 
   Probotics, Inc
   http://www.personalrobots.com
   700 River Ave #223
   Pittsburgh, PA 15212
   USA
 **********************************************************************/
 #ifndef __GAUGE_H__
 #define __GAUGE_H__
 
 // Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++
 
 // NOTE: Do not modify the contents of this file.  If this class is regenerated by
 //  Microsoft Visual C++, your modifications will be overwritten.
 
 
 // Dispatch interfaces referenced by this interface
 class CPicture;
 
 /////////////////////////////////////////////////////////////////////////////
 // CGauge wrapper class
 
 class CGauge : public CWnd
 {
 protected:
 	DECLARE_DYNCREATE(CGauge)
 public:
 	CLSID const& GetClsid()
 	{
 		static CLSID const clsid
 			= { 0x11cb8560, 0x54b8, 0x11cf, { 0x8f, 0x33, 0x0, 0xaa, 0x0, 0xb4, 0x6f, 0xe8 } };
 		return clsid;
 	}
 	virtual BOOL Create(LPCTSTR lpszClassName,
 		LPCTSTR lpszWindowName, DWORD dwStyle,
 		const RECT& rect,
 		CWnd* pParentWnd, UINT nID,
 		CCreateContext* pContext = NULL)
 	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }
 
     BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
 		const RECT& rect, CWnd* pParentWnd, UINT nID,
 		CFile* pPersist = NULL, BOOL bStorage = FALSE,
 		BSTR bstrLicKey = NULL)
 	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
 		pPersist, bStorage, bstrLicKey); }
 
 // Attributes
 public:
 	short GetInnerTop();
 	void SetInnerTop(short);
 	short GetInnerLeft();
 	void SetInnerLeft(short);
 	short GetInnerRight();
 	void SetInnerRight(short);
 	short GetInnerBottom();
 	void SetInnerBottom(short);
 	short GetMin();
 	void SetMin(short);
 	short GetMax();
 	void SetMax(short);
 	short GetValue();
 	void SetValue(short);
 	long GetStyle();
 	void SetStyle(long);
 	BOOL GetAutosize();
 	void SetAutosize(BOOL);
 	CPicture GetPicture();
 	void SetPicture(LPDISPATCH);
 	short GetNeedleWidth();
 	void SetNeedleWidth(short);
 	BOOL GetEnabled();
 	void SetEnabled(BOOL);
 	OLE_COLOR GetBackColor();
 	void SetBackColor(OLE_COLOR);
 	OLE_COLOR GetForeColor();
 	void SetForeColor(OLE_COLOR);
 	long GetMousePointer();
 	void SetMousePointer(long);
 	CPicture GetMouseIcon();
 	void SetMouseIcon(LPDISPATCH);
 	OLE_HANDLE GetHWnd();
 	void SetHWnd(OLE_HANDLE);
 
 // Operations
 public:
 	void Refresh();
 	void AboutBox();
 };
 
 #endif // __GAUGE_H__

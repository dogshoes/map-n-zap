/**********************************************************************
   Map-N-Zap v2.x. Interface to the CYE Personal Robot
   Copyright (C) 2000, Probotics, Inc. 
 
   This program is free software; you can redistribute it and/or
   modify it under the terms of the GNU General Public License
   as published by the Free Software Foundation; either version 2
   of the License, or (at your option) any later version.
 
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   General Public License for more details.Furthermore, this source code
   is distributed without any promise, implied or explicit, of 
   support from Probotics, Inc.
 
   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  
   02111-1307, USA.
 
   Probotics, Inc
   http://www.personalrobots.com
   700 River Ave #223
   Pittsburgh, PA 15212
   USA
 **********************************************************************/
 /**********************************************************************
    Map-N-Zap v2.x. Interface to the CYE Personal Robot
    Copyright (C) 2000, Probotics, Inc. 
  
    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2
    of the License, or (at your option) any later version.
  
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    General Public License for more details.Furthermore, this source code
    is distributed without any promise, implied or explicit, of 
    support from Probotics, Inc.
  
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  
    02111-1307, USA.
  
    Probotics, Inc
    http://www.personalrobots.com
    700 River Ave #223
    Pittsburgh, PA 15212
    USA
  **********************************************************************/
  // Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++
  
  // NOTE: Do not modify the contents of this file.  If this class is regenerated by
  //  Microsoft Visual C++, your modifications will be overwritten.
  
  
  #include "stdafx.h"
  #include "msiav.h"
  
  /////////////////////////////////////////////////////////////////////////////
  // CMSIAV
  
  IMPLEMENT_DYNCREATE(CMSIAV, CWnd)
  
  /////////////////////////////////////////////////////////////////////////////
  // CMSIAV properties
  
  long CMSIAV::GetMSInfoView()
  {
  	long result;
  	GetProperty(0x1, VT_I4, (void*)&result);
  	return result;
  }
  
  void CMSIAV::SetMSInfoView(long propVal)
  {
  	SetProperty(0x1, VT_I4, propVal);
  }
  
  /////////////////////////////////////////////////////////////////////////////
  // CMSIAV operations
  
  void CMSIAV::MSInfoRefresh(BOOL fForSave, long* pCancel)
  {
  	static BYTE parms[] =
  		VTS_BOOL VTS_PI4;
  	InvokeHelper(0x2, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
  		 fForSave, pCancel);
  }
  
  BOOL CMSIAV::MSInfoLoadFile(LPCTSTR szFileName)
  {
  	BOOL result;
  	static BYTE parms[] =
  		VTS_BSTR;
  	InvokeHelper(0x3, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
  		szFileName);
  	return result;
  }
  
  void CMSIAV::MSInfoSelectAll()
  {
  	InvokeHelper(0x4, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
  }
  
  void CMSIAV::MSInfoCopy()
  {
  	InvokeHelper(0x5, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
  }
  
  void CMSIAV::MSInfoUpdateView()
  {
  	InvokeHelper(0x6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
  }
  
  long CMSIAV::MSInfoGetData(long dwMSInfoView, long* pBuffer, long dwLength)
  {
  	long result;
  	static BYTE parms[] =
  		VTS_I4 VTS_PI4 VTS_I4;
  	InvokeHelper(0x7, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
  		dwMSInfoView, pBuffer, dwLength);
  	return result;
  }
  
  void CMSIAV::AboutBox()
  {
  	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
  }
